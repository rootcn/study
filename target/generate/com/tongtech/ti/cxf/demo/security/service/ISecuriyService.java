package com.tongtech.ti.cxf.demo.security.service;

import java.net.MalformedURLException;
import java.net.URL;
import javax.xml.namespace.QName;
import javax.xml.ws.WebEndpoint;
import javax.xml.ws.WebServiceClient;
import javax.xml.ws.WebServiceFeature;
import javax.xml.ws.Service;

/**
 * This class was generated by Apache CXF 2.7.6
 * 2013-08-28T11:43:39.101+08:00
 * Generated source version: 2.7.6
 * 
 */
@WebServiceClient(name = "ISecuriyService", 
                  wsdlLocation = "file:/G:/github/data/study/src/main/java/com/tongtech/ti/cxf/demo/security/security.wsdl",
                  targetNamespace = "http://demo.ti.tongtech.com/security/") 
public class ISecuriyService extends Service {

    public final static URL WSDL_LOCATION;

    public final static QName SERVICE = new QName("http://demo.ti.tongtech.com/security/", "ISecuriyService");
    public final static QName ISecuriyServicePort = new QName("http://demo.ti.tongtech.com/security/", "ISecuriyServicePort");
    static {
        URL url = null;
        try {
            url = new URL("file:/G:/github/data/study/src/main/java/com/tongtech/ti/cxf/demo/security/security.wsdl");
        } catch (MalformedURLException e) {
            java.util.logging.Logger.getLogger(ISecuriyService.class.getName())
                .log(java.util.logging.Level.INFO, 
                     "Can not initialize the default wsdl from {0}", "file:/G:/github/data/study/src/main/java/com/tongtech/ti/cxf/demo/security/security.wsdl");
        }
        WSDL_LOCATION = url;
    }

    public ISecuriyService(URL wsdlLocation) {
        super(wsdlLocation, SERVICE);
    }

    public ISecuriyService(URL wsdlLocation, QName serviceName) {
        super(wsdlLocation, serviceName);
    }

    public ISecuriyService() {
        super(WSDL_LOCATION, SERVICE);
    }
    
    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ISecuriyService(WebServiceFeature ... features) {
        super(WSDL_LOCATION, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ISecuriyService(URL wsdlLocation, WebServiceFeature ... features) {
        super(wsdlLocation, SERVICE, features);
    }

    //This constructor requires JAX-WS API 2.2. You will need to endorse the 2.2
    //API jar or re-run wsdl2java with "-frontend jaxws21" to generate JAX-WS 2.1
    //compliant code instead.
    public ISecuriyService(URL wsdlLocation, QName serviceName, WebServiceFeature ... features) {
        super(wsdlLocation, serviceName, features);
    }

    /**
     *
     * @return
     *     returns ISecuriyDemo
     */
    @WebEndpoint(name = "ISecuriyServicePort")
    public ISecuriyDemo getISecuriyServicePort() {
        return super.getPort(ISecuriyServicePort, ISecuriyDemo.class);
    }

    /**
     * 
     * @param features
     *     A list of {@link javax.xml.ws.WebServiceFeature} to configure on the proxy.  Supported features not in the <code>features</code> parameter will have their default values.
     * @return
     *     returns ISecuriyDemo
     */
    @WebEndpoint(name = "ISecuriyServicePort")
    public ISecuriyDemo getISecuriyServicePort(WebServiceFeature... features) {
        return super.getPort(ISecuriyServicePort, ISecuriyDemo.class, features);
    }

}
